1. „то такое обобщение (generic)?

“ермин обобщение означает параметризированный тип.

3.  ак можно наложить определенное ограничение на параметр?

— помощью ключевого слова where T : (class, struct, name_class, name_class<T>, new() Ц это что-то, что имеет конструктор без параметров).

4.  ак можно наложить несколько ограничений на параметр?

„ерез ,

class Folf<T> where T: class, new()

5. ѕеречислите все существующие ограничени€ на типы данных обобщени€?

class, struct, name_class, name_class<T>, new() Ц это что-то, что имеет конструктор без параметров

9. ѕриведите примеры, когда обобщенный класс может действовать как базовый или производный класс.

Class Dog<T, V>: Folf<T> (Folf<T> - базовый)

T Ц параметр передаваемый базовому классу

V Ц параметр характерный только дл€ производного класса0

Class Folf<T> : Animal (Folf<T> - производный)

10. ¬ каких случа€х в обобщени€х может использоватьс€ оператор default?

 огда в обобщении нужно присвоить переменным некоторое начальное значение, то на пр€мую это сделать нельз€, поэтому используетс€ ключевое слово default(T)

ќн присваивает ссылочным типам значение null, а значимым типам 0.
11. ѕо€сните как использовать статические переменные в обобщенных классах.

¬ обобщЄнных классах определЄнным образом создаЄтс€ набор статических членов и его можно инициализировать без создани€ объекта

Folf<T>

{

Public static T speed;

}

Folf<string>.speed = УfastФ;

Folf<int>.speed = 50;

12. ѕриведите пример обобщенного интерфейса.

Interface IGen<T>

{

Void Show();

Void Add();

}

13. ¬ чем отличие обобщенных классов от обобщенных структур?

ќни похожи но структуры нельз€ наследовать.

14.  акие классы дл€ работы с файлами вы знаете? ѕриведите пример

File, fileInfo